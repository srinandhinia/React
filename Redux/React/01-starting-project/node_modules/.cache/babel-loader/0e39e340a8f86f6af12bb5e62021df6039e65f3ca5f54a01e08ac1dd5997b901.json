{"ast":null,"code":"// import { createStore } from \"redux\";\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport counterReducer from \"../store/index\";\nimport authReducer from \"../store/index\";\nconst store = configureStore({\n  reducer: {\n    counter: counterReducer,\n    auth: authReducer\n  }\n});\nexport default store;\n\n// const counterReducer = (state = { counter: 0, showCounter: true }, action) => {\n//     if (action.type === \"increment\") {\n//       return { counter: state.counter + 1, showCounter: state.showCounter };\n//     }\n//     if (action.type === \"decrement\") {\n//       return { counter: state.counter - 1, showCounter: state.showCounter };\n//     }\n//     if (action.type === \"increaseby5\") {\n//       return {\n//         counter: state.counter + action.increaseValue,\n//         showCounter: state.showCounter,\n//       };\n//     }\n//     if (action.type === \"toggle\") {\n//       return {\n//         counter: state.counter,\n//         showCounter: !state.showCounter,\n//       };\n//     }\n//     return state;\n//   };\n//   const store = createStore(counterReducer);\n\n// below works if we have only one reducer\n// const store = createStore(counterSlice.reducer);\n\n// configureStore works if we have multiple reducers incase of big apps","map":{"version":3,"names":["configureStore","counterReducer","authReducer","store","reducer","counter","auth"],"sources":["C:/Users/srina/Downloads/LearnReact/React/Redux/React/01-starting-project/src/store/index.js"],"sourcesContent":["// import { createStore } from \"redux\";\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nimport counterReducer from \"../store/index\";\r\nimport authReducer from \"../store/index\";\r\n\r\nconst store = configureStore({\r\n  reducer: { counter: counterReducer, auth: authReducer },\r\n});\r\n\r\nexport default store;\r\n\r\n// const counterReducer = (state = { counter: 0, showCounter: true }, action) => {\r\n//     if (action.type === \"increment\") {\r\n//       return { counter: state.counter + 1, showCounter: state.showCounter };\r\n//     }\r\n//     if (action.type === \"decrement\") {\r\n//       return { counter: state.counter - 1, showCounter: state.showCounter };\r\n//     }\r\n//     if (action.type === \"increaseby5\") {\r\n//       return {\r\n//         counter: state.counter + action.increaseValue,\r\n//         showCounter: state.showCounter,\r\n//       };\r\n//     }\r\n//     if (action.type === \"toggle\") {\r\n//       return {\r\n//         counter: state.counter,\r\n//         showCounter: !state.showCounter,\r\n//       };\r\n//     }\r\n//     return state;\r\n//   };\r\n//   const store = createStore(counterReducer);\r\n\r\n// below works if we have only one reducer\r\n// const store = createStore(counterSlice.reducer);\r\n\r\n// configureStore works if we have multiple reducers incase of big apps\r\n"],"mappings":"AAAA;AACA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,OAAOC,cAAc,MAAM,gBAAgB;AAC3C,OAAOC,WAAW,MAAM,gBAAgB;AAExC,MAAMC,KAAK,GAAGH,cAAc,CAAC;EAC3BI,OAAO,EAAE;IAAEC,OAAO,EAAEJ,cAAc;IAAEK,IAAI,EAAEJ;EAAY;AACxD,CAAC,CAAC;AAEF,eAAeC,KAAK;;AAEpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}